// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customer.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReadCustomerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadCustomerRequest) Reset()         { *m = ReadCustomerRequest{} }
func (m *ReadCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*ReadCustomerRequest) ProtoMessage()    {}
func (*ReadCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{0}
}

func (m *ReadCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadCustomerRequest.Unmarshal(m, b)
}
func (m *ReadCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadCustomerRequest.Marshal(b, m, deterministic)
}
func (m *ReadCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadCustomerRequest.Merge(m, src)
}
func (m *ReadCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_ReadCustomerRequest.Size(m)
}
func (m *ReadCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadCustomerRequest proto.InternalMessageInfo

func (m *ReadCustomerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetAllCustomersResponse struct {
	Customer             []*Customer `protobuf:"bytes,1,rep,name=customer,proto3" json:"customer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetAllCustomersResponse) Reset()         { *m = GetAllCustomersResponse{} }
func (m *GetAllCustomersResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllCustomersResponse) ProtoMessage()    {}
func (*GetAllCustomersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{1}
}

func (m *GetAllCustomersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllCustomersResponse.Unmarshal(m, b)
}
func (m *GetAllCustomersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllCustomersResponse.Marshal(b, m, deterministic)
}
func (m *GetAllCustomersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllCustomersResponse.Merge(m, src)
}
func (m *GetAllCustomersResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllCustomersResponse.Size(m)
}
func (m *GetAllCustomersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllCustomersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllCustomersResponse proto.InternalMessageInfo

func (m *GetAllCustomersResponse) GetCustomer() []*Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

type GetCustomerByIdRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCustomerByIdRequest) Reset()         { *m = GetCustomerByIdRequest{} }
func (m *GetCustomerByIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetCustomerByIdRequest) ProtoMessage()    {}
func (*GetCustomerByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{2}
}

func (m *GetCustomerByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerByIdRequest.Unmarshal(m, b)
}
func (m *GetCustomerByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerByIdRequest.Marshal(b, m, deterministic)
}
func (m *GetCustomerByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerByIdRequest.Merge(m, src)
}
func (m *GetCustomerByIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetCustomerByIdRequest.Size(m)
}
func (m *GetCustomerByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerByIdRequest proto.InternalMessageInfo

func (m *GetCustomerByIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteCustomerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCustomerRequest) Reset()         { *m = DeleteCustomerRequest{} }
func (m *DeleteCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCustomerRequest) ProtoMessage()    {}
func (*DeleteCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{3}
}

func (m *DeleteCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCustomerRequest.Unmarshal(m, b)
}
func (m *DeleteCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCustomerRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCustomerRequest.Merge(m, src)
}
func (m *DeleteCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCustomerRequest.Size(m)
}
func (m *DeleteCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCustomerRequest proto.InternalMessageInfo

func (m *DeleteCustomerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Customer struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{4}
}

func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (m *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(m, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Customer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Customer) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*ReadCustomerRequest)(nil), "ReadCustomerRequest")
	proto.RegisterType((*GetAllCustomersResponse)(nil), "GetAllCustomersResponse")
	proto.RegisterType((*GetCustomerByIdRequest)(nil), "GetCustomerByIdRequest")
	proto.RegisterType((*DeleteCustomerRequest)(nil), "DeleteCustomerRequest")
	proto.RegisterType((*Customer)(nil), "Customer")
}

func init() {
	proto.RegisterFile("customer.proto", fileDescriptor_9efa92dae3d6ec46)
}

var fileDescriptor_9efa92dae3d6ec46 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4d, 0x4f, 0xea, 0x40,
	0x14, 0x85, 0x02, 0x2f, 0x70, 0x5f, 0x52, 0x92, 0x79, 0x3c, 0x68, 0xfa, 0x36, 0xa4, 0x09, 0x81,
	0xb7, 0x60, 0x9a, 0xa0, 0x46, 0x97, 0x0a, 0x1a, 0xe2, 0xb6, 0xc6, 0x8d, 0x2b, 0xfb, 0x71, 0xad,
	0x8d, 0x1d, 0x66, 0xe8, 0x4c, 0x51, 0x7e, 0x9e, 0xff, 0xcc, 0x30, 0x58, 0x40, 0x03, 0x1a, 0x77,
	0x73, 0xe7, 0xdc, 0x39, 0xe7, 0xdc, 0x33, 0x17, 0xcc, 0x30, 0x97, 0x8a, 0x33, 0xcc, 0xa8, 0xc8,
	0xb8, 0xe2, 0xf6, 0xbf, 0x98, 0xf3, 0x38, 0x45, 0x57, 0x57, 0x41, 0xfe, 0xe0, 0x22, 0x13, 0x6a,
	0xb9, 0x06, 0x9d, 0x1e, 0xfc, 0xf1, 0xd0, 0x8f, 0x26, 0xef, 0x4f, 0x3c, 0x9c, 0xe7, 0x28, 0x15,
	0x31, 0xc1, 0x48, 0x22, 0xab, 0xdc, 0x2d, 0x0f, 0x1a, 0x9e, 0x91, 0x44, 0xce, 0x39, 0x74, 0xa6,
	0xa8, 0x2e, 0xd2, 0xb4, 0x68, 0x94, 0x1e, 0x4a, 0xc1, 0x67, 0x12, 0x49, 0x0f, 0xea, 0x85, 0xa0,
	0x55, 0xee, 0x56, 0x06, 0xbf, 0x47, 0x0d, 0xba, 0xa1, 0xdb, 0x40, 0xce, 0x00, 0xda, 0x53, 0x54,
	0x05, 0x30, 0x5e, 0x5e, 0x47, 0x87, 0xb4, 0xfa, 0xf0, 0xf7, 0x12, 0x53, 0x54, 0xf8, 0x9d, 0xa9,
	0x7b, 0xa8, 0x17, 0x2d, 0x3b, 0x58, 0x6d, 0x85, 0x11, 0x02, 0xd5, 0x99, 0xcf, 0xd0, 0x32, 0x74,
	0xb7, 0x3e, 0x93, 0x16, 0xd4, 0x90, 0xf9, 0x49, 0x6a, 0x55, 0xf4, 0xe5, 0xba, 0x20, 0x36, 0xd4,
	0x85, 0x2f, 0xe5, 0x33, 0xcf, 0x22, 0xab, 0xaa, 0x81, 0x4d, 0x3d, 0x7a, 0x35, 0xa0, 0x59, 0x48,
	0xdc, 0x60, 0xb6, 0x48, 0x42, 0x24, 0x27, 0x60, 0x4e, 0x32, 0xf4, 0xb7, 0xf6, 0xc8, 0x76, 0x5e,
	0xbb, 0x4d, 0xd7, 0x61, 0xd3, 0x22, 0x6c, 0x7a, 0xb5, 0x0a, 0xdb, 0x29, 0x91, 0x53, 0x68, 0x7e,
	0x9a, 0x9f, 0x74, 0xe8, 0xfe, 0x44, 0xec, 0x2d, 0xa1, 0x53, 0x5a, 0xe9, 0xdd, 0x8a, 0xe8, 0xc7,
	0x7a, 0x63, 0x30, 0x3f, 0xa6, 0x48, 0xda, 0x74, 0x6f, 0xac, 0x5f, 0x70, 0x4c, 0xb4, 0xe7, 0xdd,
	0x5f, 0x27, 0x2d, 0xba, 0x67, 0x5d, 0x6c, 0x8b, 0x1e, 0xd8, 0x0e, 0xa7, 0x34, 0xfe, 0x7f, 0xd7,
	0x8f, 0x13, 0xf5, 0x98, 0x07, 0x34, 0xe4, 0xcc, 0x7d, 0x59, 0x04, 0x33, 0x76, 0x7c, 0xe6, 0xc6,
	0x7c, 0xf8, 0x94, 0xa8, 0x61, 0x9c, 0x89, 0x70, 0xc8, 0x96, 0x72, 0x9e, 0xba, 0x22, 0x08, 0x7e,
	0x69, 0x07, 0x47, 0x6f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x60, 0x85, 0x34, 0x8f, 0xc2, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CustomerServiceClient is the client API for CustomerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerServiceClient interface {
	CreateCustomer(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetCustomerById(ctx context.Context, in *GetCustomerByIdRequest, opts ...grpc.CallOption) (*Customer, error)
	UpdateCustomer(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteCustomer(ctx context.Context, in *DeleteCustomerRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetAllCustomers(ctx context.Context, in *ReadCustomerRequest, opts ...grpc.CallOption) (*GetAllCustomersResponse, error)
}

type customerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCustomerServiceClient(cc grpc.ClientConnInterface) CustomerServiceClient {
	return &customerServiceClient{cc}
}

func (c *customerServiceClient) CreateCustomer(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/CustomerService/CreateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) GetCustomerById(ctx context.Context, in *GetCustomerByIdRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/CustomerService/GetCustomerById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) UpdateCustomer(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/CustomerService/UpdateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) DeleteCustomer(ctx context.Context, in *DeleteCustomerRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/CustomerService/DeleteCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) GetAllCustomers(ctx context.Context, in *ReadCustomerRequest, opts ...grpc.CallOption) (*GetAllCustomersResponse, error) {
	out := new(GetAllCustomersResponse)
	err := c.cc.Invoke(ctx, "/CustomerService/GetAllCustomers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomerServiceServer is the server API for CustomerService service.
type CustomerServiceServer interface {
	CreateCustomer(context.Context, *Customer) (*emptypb.Empty, error)
	GetCustomerById(context.Context, *GetCustomerByIdRequest) (*Customer, error)
	UpdateCustomer(context.Context, *Customer) (*emptypb.Empty, error)
	DeleteCustomer(context.Context, *DeleteCustomerRequest) (*emptypb.Empty, error)
	GetAllCustomers(context.Context, *ReadCustomerRequest) (*GetAllCustomersResponse, error)
}

// UnimplementedCustomerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCustomerServiceServer struct {
}

func (*UnimplementedCustomerServiceServer) CreateCustomer(ctx context.Context, req *Customer) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomer not implemented")
}
func (*UnimplementedCustomerServiceServer) GetCustomerById(ctx context.Context, req *GetCustomerByIdRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerById not implemented")
}
func (*UnimplementedCustomerServiceServer) UpdateCustomer(ctx context.Context, req *Customer) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomer not implemented")
}
func (*UnimplementedCustomerServiceServer) DeleteCustomer(ctx context.Context, req *DeleteCustomerRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCustomer not implemented")
}
func (*UnimplementedCustomerServiceServer) GetAllCustomers(ctx context.Context, req *ReadCustomerRequest) (*GetAllCustomersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCustomers not implemented")
}

func RegisterCustomerServiceServer(s *grpc.Server, srv CustomerServiceServer) {
	s.RegisterService(&_CustomerService_serviceDesc, srv)
}

func _CustomerService_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Customer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerService/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).CreateCustomer(ctx, req.(*Customer))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_GetCustomerById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).GetCustomerById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerService/GetCustomerById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).GetCustomerById(ctx, req.(*GetCustomerByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_UpdateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Customer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).UpdateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerService/UpdateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).UpdateCustomer(ctx, req.(*Customer))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_DeleteCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).DeleteCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerService/DeleteCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).DeleteCustomer(ctx, req.(*DeleteCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_GetAllCustomers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).GetAllCustomers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerService/GetAllCustomers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).GetAllCustomers(ctx, req.(*ReadCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CustomerService",
	HandlerType: (*CustomerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCustomer",
			Handler:    _CustomerService_CreateCustomer_Handler,
		},
		{
			MethodName: "GetCustomerById",
			Handler:    _CustomerService_GetCustomerById_Handler,
		},
		{
			MethodName: "UpdateCustomer",
			Handler:    _CustomerService_UpdateCustomer_Handler,
		},
		{
			MethodName: "DeleteCustomer",
			Handler:    _CustomerService_DeleteCustomer_Handler,
		},
		{
			MethodName: "GetAllCustomers",
			Handler:    _CustomerService_GetAllCustomers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customer.proto",
}
